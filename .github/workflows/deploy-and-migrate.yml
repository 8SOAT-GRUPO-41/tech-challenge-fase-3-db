name: "Deploy Infra and Run Migrations"

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Format
        id: fmt
        working-directory: infra
        run: terraform fmt -check

      - name: Terraform Init
        id: init
        working-directory: infra
        run: terraform init

      - name: Terraform Validate
        id: validate
        working-directory: infra
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        working-directory: infra
        run: terraform plan -no-color -input=false
        continue-on-error: true

      - name: Update Pull Request
        uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        env:
          PLAN: ${{ steps.plan.outputs.stdout }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`terraform
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        working-directory: infra
        run: terraform apply -auto-approve -input=false

  db-migrate:
    name: "Run Migrations"
    runs-on: ubuntu-latest
    needs: terraform
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Flyway
        run: |
          curl -L -o flyway.tar.gz https://repo1.maven.org/maven2/org/flywaydb/flyway-commandline/9.15.1/flyway-commandline-9.15.1-linux-x64.tar.gz
          tar -zxvf flyway.tar.gz
          mv flyway-9.15.1 flyway
          echo "$(pwd)/flyway" >> $GITHUB_PATH

      - name: Run Flyway Migrations for Payments
        env:
          FLYWAY_URL: jdbc:postgresql://${{ secrets.DB_HOST_PAYMENTS }}:${{ secrets.DB_PORT_PAYMENTS }}/${{ secrets.DB_NAME_PAYMENTS }}
          FLYWAY_USER: ${{ secrets.DB_USER_PAYMENTS }}
          FLYWAY_PASSWORD: ${{ secrets.DB_PASSWORD_PAYMENTS }}
        run: |
          ./flyway/flyway -locations=filesystem:migrations/payments migrate

      - name: Run Flyway Migrations for Orders
        env:
          FLYWAY_URL: jdbc:postgresql://${{ secrets.DB_HOST_ORDERS }}:${{ secrets.DB_PORT_ORDERS }}/${{ secrets.DB_NAME_ORDERS }}
          FLYWAY_USER: ${{ secrets.DB_USER_ORDERS }}
          FLYWAY_PASSWORD: ${{ secrets.DB_PASSWORD_ORDERS }}
        run: |
          ./flyway/flyway -locations=filesystem:migrations/orders migrate

      - name: Run Flyway Migrations for Customers
        env:
          FLYWAY_URL: jdbc:postgresql://${{ secrets.DB_HOST_CUSTOMERS }}:${{ secrets.DB_PORT_CUSTOMERS }}/${{ secrets.DB_NAME_CUSTOMERS }}
          FLYWAY_USER: ${{ secrets.DB_USER_CUSTOMERS }}
          FLYWAY_PASSWORD: ${{ secrets.DB_PASSWORD_CUSTOMERS }}
        run: |
          ./flyway/flyway -locations=filesystem:migrations/customers migrate
